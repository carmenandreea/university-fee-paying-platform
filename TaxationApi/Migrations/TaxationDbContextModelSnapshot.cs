// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaxationApi.Models;

namespace TaxationApi.Migrations
{
    [DbContext(typeof(TaxationDbContext))]
    partial class TaxationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TaxationApi.Models.AdminUser", b =>
                {
                    b.Property<long>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<bool>("hasReadingPermission")
                        .HasColumnType("boolean");

                    b.Property<bool>("hasWritingPermission")
                        .HasColumnType("boolean");

                    b.Property<long>("institutionId")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.HasIndex("institutionId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("TaxationApi.Models.Institution", b =>
                {
                    b.Property<long>("institutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("institutionId");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("TaxationApi.Models.Payer", b =>
                {
                    b.Property<long>("payerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("cnp")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.HasKey("payerId");

                    b.ToTable("Payers");
                });

            modelBuilder.Entity("TaxationApi.Models.TaxValue", b =>
                {
                    b.Property<long>("taxValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("institutionId")
                        .HasColumnType("bigint");

                    b.Property<long>("type")
                        .HasColumnType("bigint");

                    b.Property<long>("value")
                        .HasColumnType("bigint");

                    b.HasKey("taxValueId");

                    b.HasIndex("institutionId");

                    b.ToTable("TaxValues");
                });

            modelBuilder.Entity("TaxationApi.Models.Transaction", b =>
                {
                    b.Property<long>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("institutionId")
                        .HasColumnType("bigint");

                    b.Property<long>("payerId")
                        .HasColumnType("bigint");

                    b.Property<long>("status")
                        .HasColumnType("bigint");

                    b.Property<long>("type")
                        .HasColumnType("bigint");

                    b.Property<long>("value")
                        .HasColumnType("bigint");

                    b.HasKey("transactionId");

                    b.HasIndex("institutionId");

                    b.HasIndex("payerId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TaxationApi.Models.AdminUser", b =>
                {
                    b.HasOne("TaxationApi.Models.Institution", "institution")
                        .WithMany("adminUsers")
                        .HasForeignKey("institutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaxationApi.Models.TaxValue", b =>
                {
                    b.HasOne("TaxationApi.Models.Institution", "institution")
                        .WithMany("taxValues")
                        .HasForeignKey("institutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaxationApi.Models.Transaction", b =>
                {
                    b.HasOne("TaxationApi.Models.Institution", "institution")
                        .WithMany("transactions")
                        .HasForeignKey("institutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxationApi.Models.Payer", "payer")
                        .WithMany("transactions")
                        .HasForeignKey("payerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
